(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{224:function(r,a,t){r.exports=t.p+"assets/img/docker-cmd.69a169d5.png"},225:function(r,a,t){r.exports=t.p+"assets/img/window-linux-docker.51c83a81.png"},226:function(r,a,t){r.exports=t.p+"assets/img/docker-images-web1.a1132b4a.png"},293:function(r,a,t){"use strict";t.r(a);var e=t(0),s=Object(e.a)({},(function(){var r=this,a=r.$createElement,e=r._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h2",{attrs:{id:"了解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#了解"}},[r._v("#")]),r._v(" 了解")]),r._v(" "),e("p",[r._v("1、Docker CLI 客户端，用来运行docker引擎创建镜像和容器"),e("br"),r._v("\n2、Docker Machine. 可以让你在windows的命令行中运行docker引擎命令"),e("br"),r._v("\n3、Docker Compose. 用来运行docker-compose命令"),e("br"),r._v("\n4、Kitematic. 这是Docker的GUI版本"),e("br"),r._v("\n5、Docker QuickStart shell. 这是一个已经配置好Docker的命令行环境"),e("br"),r._v("\n6、Oracle VM Virtualbox. 虚拟机")]),r._v(" "),e("h3",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[r._v("#")]),r._v(" Docker")]),r._v(" "),e("p",[r._v("建立容易迁移环境")]),r._v(" "),e("h3",{attrs:{id:"docker官网"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker官网"}},[r._v("#")]),r._v(" Docker官网")]),r._v(" "),e("p",[r._v("https://hub.docker.com/")]),r._v(" "),e("h2",{attrs:{id:"教程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#教程"}},[r._v("#")]),r._v(" 教程")]),r._v(" "),e("h3",{attrs:{id:"mac搭建docker的教程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac搭建docker的教程"}},[r._v("#")]),r._v(" mac搭建docker的教程")]),r._v(" "),e("p",[r._v("重要教程：")]),r._v(" "),e("ul",[e("li",[r._v("https://www.runoob.com/docker/windows-docker-install.html")]),r._v(" "),e("li",[r._v("https://blog.51cto.com/13673090/2092462")])]),r._v(" "),e("h2",{attrs:{id:"启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[r._v("#")]),r._v(" 启动")]),r._v(" "),e("h3",{attrs:{id:"window本机开发时，启动docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#window本机开发时，启动docker"}},[r._v("#")]),r._v(" window本机开发时，启动docker")]),r._v(" "),e("ul",[e("li",[r._v("前提"),e("br"),r._v("\n不要运行太多软件，占用内存，否则docker会因为内存不足，而无法启动")]),r._v(" "),e("li",[r._v("启动"),e("br"),r._v('\n找到"docker desktop"快捷键，双击启动，即可启动运行docker。')]),r._v(" "),e("li",[r._v("检查"),e("br"),r._v("\n—— 是否启动成功？"),e("br"),r._v("\n—— 成功的标志："),e("br"),r._v('\n右下角的docker缩略图标，鼠标放置时显示"docker desktopis running"')])]),r._v(" "),e("h3",{attrs:{id:"启动步骤（成功）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动步骤（成功）"}},[r._v("#")]),r._v(" 启动步骤"),e("span",{staticStyle:{color:"green"}},[r._v("（成功）")])]),r._v(" "),e("ul",[e("li",[r._v("STEP 1 安装docker")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("brew cask install docker  \n")])])]),e("ul",[e("li",[r._v("STEP 2 安装目录：")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("/Applications/Docker.app  \n")])])]),e("ul",[e("li",[r._v("STEP 3 在docker.app登录账号"),e("br"),r._v("\ndocker.app登录后，docker指令才会生效")]),r._v(" "),e("li",[r._v("STEP 4 操作指令\n"),e("blockquote",[e("p",[r._v("docker ps 查看正在运行的容器"),e("br"),r._v("\ndocker stop停止正在运行的容器"),e("br"),r._v("\ndocker start启动容器"),e("br"),r._v("\ndocker ps -a查看终止状态的容器"),e("br"),r._v("\ndocker rm -f webserver命令来移除正在运行的容器"),e("br"),r._v("\ndocker list 列出本地镜像"),e("br"),r._v("\ndocker rmi 删除的镜像")])])]),r._v(" "),e("li",[r._v("STEP 5 docker容器的创建与操作"),e("br"),r._v("\nhttps://www.linuxidc.com/Linux/2017-12/149575.htm")]),r._v(" "),e("li",[r._v("STEP 6 后台运行"),e("br"),r._v("\n关键词：")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("-d  \n")])])]),e("p",[r._v("例子：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("docker run -d ubuntu:15.10  \n")])])]),e("ul",[e("li",[r._v("STEP 7 查看")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("docker ps  \n")])])]),e("ul",[e("li",[r._v("STEP 8 关闭运行中的进程")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("docker stop xxx  \n")])])]),e("p",[r._v("备注："),e("br"),r._v("\nxxx，指容器启动后生成的进程ID字符串。一定要有开头，可以是片段")]),r._v(" "),e("h2",{attrs:{id:"基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[r._v("#")]),r._v(" 基础")]),r._v(" "),e("h3",{attrs:{id:"全命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全命令"}},[r._v("#")]),r._v(" 全命令")]),r._v(" "),e("p",[r._v("仓库相关操作"),e("br"),r._v("\ndocker pull     #从远程仓库拉取镜像到本地"),e("br"),r._v("\ndocker push     #推送本地镜像到远程仓库"),e("br"),r._v("\ndocker search   #在仓库搜索镜像"),e("br"),r._v("\ndocker login    #登录到官方仓库Docker Hub"),e("br"),r._v("\ndocker logout   #退出登录"),e("br"),r._v("\n12345"),e("br"),r._v("\n镜像相关操作"),e("br"),r._v("\ndocker build    #从Dockerfile构建镜像"),e("br"),r._v("\ndocker pull     #同上"),e("br"),r._v("\ndocker push     #同上"),e("br"),r._v("\ndocker history  #显示镜像的历史信息"),e("br"),r._v("\ndocker images   #列出镜像"),e("br"),r._v("\ndocker rmi      #删除镜像"),e("br"),r._v("\ndocker tag      #给镜像打上tag标签"),e("br"),r._v("\ndocker run      #创建容器并启动容器"),e("br"),r._v("\ndocker create   #创建容器"),e("br"),r._v("\ndocker commit   #将修改后的容器生成镜像"),e("br"),r._v("\ndocker load     #从压缩包中加载镜像"),e("br"),r._v("\ndocker import   #从归档文件中创建镜像"),e("br"),r._v("\ndocker save     #将镜像保存到压缩文件"),e("br"),r._v("\n12345678910111213"),e("br"),r._v("\n容器相关操作"),e("br"),r._v("\ndocker attach   #依附到一个正在运行的容器中"),e("br"),r._v("\ndocker exec     #进到正在运行的容器中执行命令"),e("br"),r._v("\ndocker cp       #在容器和本地系统间复制文件"),e("br"),r._v("\ndocker update   #将一个容器内所有的进程从暂停状态中恢复"),e("br"),r._v("\ndocker ps       #列出主机中的容器"),e("br"),r._v("\ndocker port     #查找一个nat到私有网口的公共口"),e("br"),r._v("\ndocker top      #查看一个容器中正在运行的进程信息"),e("br"),r._v("\ndocker logs     #查看日志文件"),e("br"),r._v("\ndocker diff     #检查容器内文件系统的修改"),e("br"),r._v("\ndocker status   #输出容器的资源使用统计信息"),e("br"),r._v("\ndocker wait     #阻塞直到容器终止"),e("br"),r._v("\ndocker start    #启动已创建的容器"),e("br"),r._v("\ndocker pause    #暂停运行中的容器"),e("br"),r._v("\ndocker unpause  #使暂停的容器恢复运行"),e("br"),r._v("\ndocker stop     #停止容器运行"),e("br"),r._v("\ndocker rename   #容器改名"),e("br"),r._v("\ndocker restart  #容器重启"),e("br"),r._v("\ndocker kill     #关闭运行中的容器"),e("br"),r._v("\ndocker rm       #删除容器"),e("br"),r._v("\ndocker export   #导出容器内容为tar包"),e("br"),r._v("\ndocker run      #同上"),e("br"),r._v("\ndocker create   #同上"),e("br"),r._v("\ndocker commit   #同上"),e("br"),r._v("\n1234567891011121314151617181920212223"),e("br"),r._v("\n其他基本命令"),e("br"),r._v("\ndocker events   #从服务端获取实时的事件"),e("br"),r._v("\ndocker info     #查看系统相关信息"),e("br"),r._v("\ndocker inspect  #显示Docker对象的具体配置信息，包括容器，镜像，网络等"),e("br"),r._v("\ndocker version  #输出Docker的版本信息"),e("br"),r._v("\n1234"),e("br"),r._v("\n管理命令"),e("br"),r._v("\ndocker container    #容器管理"),e("br"),r._v("\ndocker image        #镜像管理"),e("br"),r._v("\ndocker network      #网络管理"),e("br"),r._v("\ndocker node         #节点管理"),e("br"),r._v("\ndocker plugin       #插件管理"),e("br"),r._v("\ndocker secret       #管理敏感数据及普通服务配置项"),e("br"),r._v("\ndocker service      #服务管理"),e("br"),r._v("\ndocker stack        #栈管理"),e("br"),r._v("\ndocker swarm        #集群管理"),e("br"),r._v("\ndocker system       #管理系统信息"),e("br"),r._v("\ndocker volume       #卷管理"),e("br"),r._v("\n参考："),e("br"),r._v("\nhttps://blog.csdn.net/xhyxxx/article/details/75447962")]),r._v(" "),e("h3",{attrs:{id:"docker-app之preferences全解："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-app之preferences全解："}},[r._v("#")]),r._v(" docker.app之preferences全解：")]),r._v(" "),e("p",[r._v("https://blog.csdn.net/w275840140/article/details/80158972")]),r._v(" "),e("h3",{attrs:{id:"window7的docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#window7的docker"}},[r._v("#")]),r._v(" window7的docker")]),r._v(" "),e("h4",{attrs:{id:"快速启动docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速启动docker"}},[r._v("#")]),r._v(" 快速启动docker")]),r._v(" "),e("ul",[e("li",[r._v("Step1: 打开cmd")]),r._v(" "),e("li",[r._v("Step2: 拖拽C:\\Program Files\\Docker Toolbox\\start.sh到cmd里，点击enter执行。")])]),r._v(" "),e("h3",{attrs:{id:"window的docker配置加速器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#window的docker配置加速器"}},[r._v("#")]),r._v(" window的docker配置加速器")]),r._v(" "),e("ul",[e("li",[r._v("在Docker的配置“Demon”中，在“Registry mirrors”下添加："),e("br"),r._v("\nhttps://registry.docker-cn.com")]),r._v(" "),e("li",[r._v("备注："),e("br"),r._v("\n1）Docker 官方中国区     https://registry.docker-cn.com"),e("br"),r._v("\n2）网易    http://hub-mirror.c.163.com"),e("br"),r._v("\n3）ustc     https://docker.mirrors.ustc.edu.cn")]),r._v(" "),e("li",[r._v("参考："),e("br"),r._v("\nhttps://blog.csdn.net/slibra_L/article/details/77505003")]),r._v(" "),e("li",[r._v("window docker的加速镜像设置："),e("br"),r._v("\nhttps://segmentfault.com/a/1190000016083023?utm_source=tag-newest")]),r._v(" "),e("li",[r._v("参考："),e("br"),r._v("\nhttps://segmentfault.com/a/1190000016083023?utm_source=tag-newest")])]),r._v(" "),e("h3",{attrs:{id:"查看镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看镜像"}},[r._v("#")]),r._v(" 查看镜像")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("Docker ps -a  \n")])])]),e("h3",{attrs:{id:"启动镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动镜像"}},[r._v("#")]),r._v(" 启动镜像")]),r._v(" "),e("p",[r._v("docker start 镜像id"),e("br"),r._v("\n参考："),e("br"),r._v("\nhttps://www.cnblogs.com/asxf/p/11057638.html")]),r._v(" "),e("h3",{attrs:{id:"阿里云镜像加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阿里云镜像加速"}},[r._v("#")]),r._v(" 阿里云镜像加速")]),r._v(" "),e("p",[r._v("参考："),e("br"),r._v("\n控制台"),e("br"),r._v("\nhttps://cr.console.aliyun.com/cn-hangzhou/instances/mirrors"),e("br"),r._v("\n教程"),e("br"),r._v("\nhttps://blog.csdn.net/my__holiday/article/details/79111397")]),r._v(" "),e("h3",{attrs:{id:"docker安装的系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker安装的系统"}},[r._v("#")]),r._v(" docker安装的系统")]),r._v(" "),e("p",[r._v("linux")]),r._v(" "),e("h3",{attrs:{id:"docker-compose用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose用法"}},[r._v("#")]),r._v(" docker-compose用法")]),r._v(" "),e("h3",{attrs:{id:"docker-运行时资源限制-内存memory、交换机分区swap、cpu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-运行时资源限制-内存memory、交换机分区swap、cpu"}},[r._v("#")]),r._v(" Docker 运行时资源限制-内存memory、交换机分区Swap、CPU")]),r._v(" "),e("h3",{attrs:{id:"docker常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令"}},[r._v("#")]),r._v(" docker常用命令")]),r._v(" "),e("p",[e("img",{attrs:{src:t(224),alt:"Image Text"}})]),r._v(" "),e("h3",{attrs:{id:"镜像随docker容器启动而自动启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像随docker容器启动而自动启动"}},[r._v("#")]),r._v(" 镜像随docker容器启动而自动启动")]),r._v(" "),e("p",[r._v("--restart=unless-stopped"),e("br"),r._v("\n或"),e("br"),r._v("\nrestart=always")]),r._v(" "),e("ul",[e("li",[r._v("方法一："),e("br"),r._v("\ndocker run -d --restart=unless-stopped -p 3306:3306 hub.c.163.com/library/mysql:5.7.18"),e("br"),r._v("\n在-d 后添加--restart=unless-stopped下次docker启动后，mysql就会自动启动")]),r._v(" "),e("li",[r._v("方法二："),e("br"),r._v("\ndocker container update --restart=always a7328ec41e91")]),r._v(" "),e("li",[r._v("方法三："),e("br"),r._v("\ndocker run --name docker-gitlab-master_gitlab_1 -d --restart=always /bin/bash")]),r._v(" "),e("li",[r._v("方法四："),e("br"),r._v("\ndocker exec -it docker-gitlab-master_gitlab_1 -d --restart=always /bin/bash")]),r._v(" "),e("li",[r._v("参考："),e("br"),r._v("\nhttps://blog.csdn.net/qq_38522268/article/details/83894903"),e("br"),r._v("\nhttps://www.cnblogs.com/kaishirenshi/p/10396446.html")])]),r._v(" "),e("h3",{attrs:{id:"docker的ip："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker的ip："}},[r._v("#")]),r._v(" docker的ip：")]),r._v(" "),e("p",[r._v("https://jingyan.baidu.com/article/95c9d20d61bc1dec4f756156.html")]),r._v(" "),e("h3",{attrs:{id:"docker-设置代理vpn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-设置代理vpn"}},[r._v("#")]),r._v(" docker 设置代理vpn")]),r._v(" "),e("p",[r._v("https://www.cnblogs.com/jacquin/p/9604576.html")]),r._v(" "),e("h3",{attrs:{id:"ssh连接docker-container"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh连接docker-container"}},[r._v("#")]),r._v(" ssh连接docker container")]),r._v(" "),e("p",[r._v("https://www.cnblogs.com/linguoguo/p/10248074.html"),e("br"),r._v("\n真实原理："),e("br"),r._v("\n在Windows上搭建docker服务器需要在Windows模拟一个Linux平台，然后在Linux平台上搭建的docker服务器，所以在使用ssh工具连接docker容器的时候，使用的ip地址不是docker容器的地址，也不能使用localhost、127.0.0.1，需要使用 docker-mechine IP default命令获取到虚拟Linux的IP地址，通过这个地址使用 ssh -p xxx root@192.168.100.0（此地址是通过命令获取到的IP），然后才能登录。使用xshell登录docker容器后，利用xftp连接进行文件的传送"),e("br"),r._v("\n图解："),e("br"),r._v(" "),e("img",{attrs:{src:t(225),alt:"Image Text"}}),e("br"),r._v("\n参考："),e("br"),r._v("\nhttps://www.cnblogs.com/lanrumeng/p/9764013.html"),e("br"),r._v("\nhttps://www.cnblogs.com/qingyunzong/p/9021140.html")]),r._v(" "),e("h3",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[r._v("#")]),r._v(" 其他")]),r._v(" "),e("p",[r._v("docker exec -it a7328ec41e91  update-permissions")]),r._v(" "),e("h3",{attrs:{id:"大杀器docker-compose的特殊命令："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大杀器docker-compose的特殊命令："}},[r._v("#")]),r._v(" 大杀器docker-compose的特殊命令：")]),r._v(" "),e("p",[r._v("build 构建或重建服务"),e("br"),r._v("\nhelp 命令帮助"),e("br"),r._v("\nkill 杀掉容器"),e("br"),r._v("\nlogs 显示容器的输出内容"),e("br"),r._v("\nport 打印绑定的开放端口"),e("br"),r._v("\nps 显示容器"),e("br"),r._v("\npull 拉取服务镜像"),e("br"),r._v("\nrestart 重启服务"),e("br"),r._v("\nrm 删除停止的容器"),e("br"),r._v("\nrun 运行一个一次性命令"),e("br"),r._v("\nscale 设置服务的容器数目"),e("br"),r._v("\nstart 开启服务"),e("br"),r._v("\nstop 停止服务"),e("br"),r._v("\nup 创建并启动容器"),e("br"),r._v("\n参考："),e("br"),r._v("\nhttps://www.cnblogs.com/williamjie/p/9103327.html")]),r._v(" "),e("h3",{attrs:{id:"window的docker连接ssh"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#window的docker连接ssh"}},[r._v("#")]),r._v(" window的docker连接ssh")]),r._v(" "),e("p",[r._v("安装openssh-server"),e("br"),r._v("\nhttps://www.v2ex.com/t/468079"),e("br"),r._v("\n安装ubuntu镜像，实现bash命令"),e("br"),r._v("\nhttps://blog.51cto.com/6226001001/1953310"),e("br"),r._v("\nhttps://www.cnblogs.com/xingyunfashi/p/8857093.html")]),r._v(" "),e("h3",{attrs:{id:"docker-run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-run"}},[r._v("#")]),r._v(" docker run")]),r._v(" "),e("p",[r._v("创建一个新的容器并运行一个命令")]),r._v(" "),e("h3",{attrs:{id:"docker镜像卸载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像卸载"}},[r._v("#")]),r._v(" docker镜像卸载")]),r._v(" "),e("p",[r._v("docker rmi -f image_id")]),r._v(" "),e("h2",{attrs:{id:"迁移"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#迁移"}},[r._v("#")]),r._v(" 迁移")]),r._v(" "),e("p",[r._v("将本地docker容器迁移到服务端")]),r._v(" "),e("h2",{attrs:{id:"容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[r._v("#")]),r._v(" 容器")]),r._v(" "),e("h3",{attrs:{id:"web服务（即：web容器）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web服务（即：web容器）"}},[r._v("#")]),r._v(" web服务（即：web容器）")]),r._v(" "),e("h4",{attrs:{id:"在docker里下载镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在docker里下载镜像"}},[r._v("#")]),r._v(" 在docker里下载镜像")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker pull training"),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("/")]),r._v("webapp  \n")])])]),e("p",[r._v("注：拉取web项目代码")]),r._v(" "),e("h4",{attrs:{id:"后台运行web服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后台运行web服务"}},[r._v("#")]),r._v(" 后台运行web服务")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker run "),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("-")]),r._v("d "),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("-")]),e("span",{pre:!0,attrs:{class:"token constant"}},[r._v("P")]),r._v(" training"),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("/")]),r._v("webapp python app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(".")]),r._v("py  \n")])])]),e("h4",{attrs:{id:"查看运行容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看运行容器"}},[r._v("#")]),r._v(" 查看运行容器")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker ps  \n")])])]),e("h4",{attrs:{id:"映射到本机指定的端口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#映射到本机指定的端口"}},[r._v("#")]),r._v(" 映射到本机指定的端口")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker run "),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("-")]),r._v("d "),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("-")]),r._v("p "),e("span",{pre:!0,attrs:{class:"token number"}},[r._v("5000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[r._v("5000")]),r._v(" training"),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("/")]),r._v("webapp python app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(".")]),r._v("py  \n")])])]),e("h4",{attrs:{id:"停止web服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#停止web服务"}},[r._v("#")]),r._v(" 停止web服务")]),r._v(" "),e("p",[r._v("语法：")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker stop "),e("span",{pre:!0,attrs:{class:"token constant"}},[r._v("ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("/")]),r._v("名字  \n")])])]),e("p",[r._v("例：")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker stop "),e("span",{pre:!0,attrs:{class:"token number"}},[r._v("49e94")]),r._v("b856b2c  \n")])])]),e("h4",{attrs:{id:"重启web服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重启web服务"}},[r._v("#")]),r._v(" 重启web服务")]),r._v(" "),e("p",[r._v("语法：")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker stop "),e("span",{pre:!0,attrs:{class:"token constant"}},[r._v("ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[r._v("/")]),r._v("名字  \n")])])]),e("p",[r._v("例：")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker start "),e("span",{pre:!0,attrs:{class:"token number"}},[r._v("49e94")]),r._v("b856b2c  \n")])])]),e("h4",{attrs:{id:"移除web服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移除web服务"}},[r._v("#")]),r._v(" 移除web服务")]),r._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[r._v("docker rm "),e("span",{pre:!0,attrs:{class:"token number"}},[r._v("49e94")]),r._v("b856b2c  \n")])])]),e("h2",{attrs:{id:"问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[r._v("#")]),r._v(" 问题")]),r._v(" "),e("h3",{attrs:{id:"unable-to-find-image-hello-world"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unable-to-find-image-hello-world"}},[r._v("#")]),r._v(" Unable to find image 'hello-world")]),r._v(" "),e("ul",[e("li",[r._v("分析："),e("br"),r._v("\n这个时候不要害怕，docker只是还没有下载这个镜像，所以我们重复命令，"),e("br"),r._v("\n这时我们就会发现，Docker从Docker Hub上获取到最新的Hello World镜像，下载到了本地")]),r._v(" "),e("li",[r._v("参考：https://blog.csdn.net/CaoMei_HuaCha/article/details/87544109")]),r._v(" "),e("li",[r._v("解答：")])]),r._v(" "),e("ol",[e("li",[r._v("设置docker的镜像加速：")])]),r._v(" "),e("ul",[e("li",[r._v("阿里"),e("span",{staticStyle:{color:"green"}},[r._v("（成功）")]),e("br"),r._v("\nhttps://alzgoonw.mirror.aliyuncs.com")]),r._v(" "),e("li",[r._v("网易"),e("br"),r._v("\nhttp://hub-mirror.c.163.com")])]),r._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[r._v("重启电脑，让它生效")]),r._v(" "),e("li",[r._v("docker run hello-world")])]),r._v(" "),e("h3",{attrs:{id:"启动web容器后，访问不到服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动web容器后，访问不到服务"}},[r._v("#")]),r._v(" 启动web容器后，访问不到服务")]),r._v(" "),e("p",[e("img",{attrs:{src:t(226),alt:"Image Text"}})]),r._v(" "),e("ul",[e("li",[r._v("原因："),e("br"),r._v("\n访问ip错了")]),r._v(" "),e("li",[r._v("解决："),e("br"),r._v("\ndocker的默认访问IP是：192.168.99.100")])]),r._v(" "),e("h3",{attrs:{id:"error-response-from-daemon-driver-failed-programming-external-connectivity-on-endpoint-docker-gitlab-master-gitlab-1-acdb8a1ee5d4d9312e0b78eb4bfd41b94782b83fcd18e2dc5d6f54113854793f-error-starting-userland-proxy-forwards-expose-port-returned-unexpected-status-500-error-failed-to-start-containers-eb82f7339baf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#error-response-from-daemon-driver-failed-programming-external-connectivity-on-endpoint-docker-gitlab-master-gitlab-1-acdb8a1ee5d4d9312e0b78eb4bfd41b94782b83fcd18e2dc5d6f54113854793f-error-starting-userland-proxy-forwards-expose-port-returned-unexpected-status-500-error-failed-to-start-containers-eb82f7339baf"}},[r._v("#")]),r._v(" Error response from daemon: driver failed programming external connectivity on endpoint docker-gitlab-master_gitlab_1 (acdb8a1ee5d4d9312e0b78eb4bfd41b94782b83fcd18e2dc5d6f54113854793f): Error starting userland proxy: /forwards/expose/port returned unexpected status: 500  Error: failed to start containers: eb82f7339baf")]),r._v(" "),e("ul",[e("li",[r._v("原因："),e("br"),r._v("\n端口被占用")]),r._v(" "),e("li",[r._v("解决："),e("br"),r._v("\n删除占用端口的进程")])]),r._v(" "),e("ul",[e("li",[r._v("查看pid:"),e("br"),r._v("\nnetstat -ano | findstr 10080")]),r._v(" "),e("li",[r._v("杀掉pid:"),e("br"),r._v('\ntaskkill /f /t /fi "pid eq 2536"')]),r._v(" "),e("li",[r._v("根据PID找到相应的应用名称:"),e("br"),r._v("\ntasklist|findstr  10080")]),r._v(" "),e("li",[r._v("按 进程号 结束进程："),e("br"),r._v("\n命令："),e("br"),r._v("\ntaskkill /pid 3912"),e("br"),r._v("\n结束多个时，命令："),e("br"),r._v("\ntaskkill /pid 80 /pid 90")]),r._v(" "),e("li",[r._v("强制终止进程"),e("br"),r._v("\ntaskkill /pid 3912 /f"),e("br"),r._v("\n参考："),e("br"),r._v("\nhttps://www.cnblogs.com/david-lcw/p/10228829.html")])]),r._v(" "),e("h3",{attrs:{id:"only-one-usage-of-each-socket-address-protocol-network-address-port-is-normally-permitted"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#only-one-usage-of-each-socket-address-protocol-network-address-port-is-normally-permitted"}},[r._v("#")]),r._v(" Only one usage of each socket address (protocol/network address/port) is normally permitted.")]),r._v(" "),e("p",[r._v("原因："),e("br"),r._v("\n这个错误是端口占用导致。"),e("br"),r._v("\n解决："),e("br"),r._v("\n我们应找到此应用程序对应端口号的pid然后kill掉，即可ok"),e("br"),r._v("\n参考："),e("br"),r._v("\nhttps://blog.csdn.net/weixin_38383877/article/details/81202287"),e("br"),r._v("\n后来，发现是window的端口占用了"),e("br"),r._v("\n解决：")]),r._v(" "),e("h3",{attrs:{id:"查看运行的tcp端口及其进程号："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看运行的tcp端口及其进程号："}},[r._v("#")]),r._v(" 查看运行的tcp端口及其进程号：")]),r._v(" "),e("p",[r._v("netstat -ano")]),r._v(" "),e("h3",{attrs:{id:"查看进程号对应的程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看进程号对应的程序"}},[r._v("#")]),r._v(" 查看进程号对应的程序")]),r._v(" "),e("p",[r._v("netstat -aon|findstr pid")]),r._v(" "),e("h3",{attrs:{id:"杀掉该程序（最终解决办法）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#杀掉该程序（最终解决办法）"}},[r._v("#")]),r._v(" 杀掉该程序（最终解决办法）")]),r._v(" "),e("p",[r._v("taskkill /f /t /im com.docker.backend.exe"),e("br"),r._v("\n参考："),e("br"),r._v("\nhttps://www.cnblogs.com/micenote/p/6063242.html")]),r._v(" "),e("h3",{attrs:{id:"window遇到的docker坑及其解决方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#window遇到的docker坑及其解决方法"}},[r._v("#")]),r._v(" window遇到的docker坑及其解决方法")]),r._v(" "),e("p",[r._v("https://www.jianshu.com/p/a7bf567194f4")])])}),[],!1,null,null,null);a.default=s.exports}}]);